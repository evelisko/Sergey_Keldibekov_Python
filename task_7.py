# 7) Реализовать генератор с помощью функции с ключевым словом ​yield,​ создающим очередное
# значение.  При  вызове  функции  должен  создаваться  объект-генератор.  Функция  должна
# вызываться следующим образом: for el in fact(n).​ Функция отвечает за получение факториала
# числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка:  факториал  числа  n  —  произведение  чисел  от  1  до  n.  Например,  факториал
# четырёх 4! = 1 * 2 * 3 * 4 = 24.


def facto_gen(n):
    fact_val = 1
    for el in range(1, n + 1):
        fact_val *= el
        yield fact_val


# data = int(input('Введите целое число: '))
data = 40
c = 0
facto_data = facto_gen(data)
print(type(facto_data))
print('Сгенерированная последоваельность фактореалов: ', end='')

for el in facto_data:
    if c > 14:
        break
    print(el, end=' ')
    c += 1
print()

# ---------------------------------------------------------------------------
# Более короткий вариант. --  это решение показалось инетерссным.
# импорты ставить не правльно в середине кода, но хотелось разделить варианты решения задачи.
from itertools import accumulate
import operator

data = 15
print(' '.join(map(str, list(accumulate(range(1, data + 1), operator.mul)))))
