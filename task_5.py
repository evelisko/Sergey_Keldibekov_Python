# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя
# необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]

print(my_list)

# value = int(input('Введите число: '))
# my_list.append(value)
# my_list.sort(reverse=True)  # самый простой способ.
# print(f'Пользовательввел число {value}. Результат: {str(my_list)[1:-1]}.')

value = int(input('Введите число: '))
ind = len(my_list)
while ind > 0:
    if value < my_list[ind - 1]:
        my_list.insert(ind, value)
        print(f'В позицию - {ind}')
        break
    ind -= 1

print(f'Пользовательввел число {value}. Результат: {str(my_list)[1:-1]}.')

# my_list = [10, 20, 20, 20, 30, 50, 70, 30]  # Поиск самых частовстречающихся элементов в словаре
# print(max(set(my_list), key=my_list.count))
#
# my_list = [10, 10, 3, 4, 5, 9, 30, 30]  # Удаление повторяющихся элементов
# print(list(set(my_list)))
